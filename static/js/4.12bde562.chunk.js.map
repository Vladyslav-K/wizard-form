{"version":3,"sources":["components/InputGooglePlacesAutocomplete.jsx","components/GenderRadio.jsx","images/icons/calendar.svg","components/DatePicker.jsx","pages/common/ProfileForm.jsx"],"names":["autocompleteService","current","InputGooglePlacesAutocomplete","memo","placeholder","required","field","label","form","errors","classes","useStyles","useState","inputValue","setInputValue","options","setOptions","loaded","useRef","window","document","querySelector","src","position","id","script","createElement","setAttribute","appendChild","loadScript","handleChange","event","target","value","fetch","useMemo","throttle","input","callback","getPlacePredictions","useEffect","active","google","maps","places","AutocompleteService","results","Autocomplete","getOptionLabel","option","description","onChange","setFieldValue","name","filterOptions","x","disableOpenOnFocus","includeInputInList","autoComplete","size","freeSolo","renderInput","params","Grid","container","className","fieldContainer","justify","htmlFor","TextField","fieldStyles","variant","fullWidth","multiline","InputError","renderOption","matches","structured_formatting","main_text_matched_substrings","parts","parse","main_text","map","match","offset","length","alignItems","item","icon","xs","part","index","key","text","Typography","color","secondary_text","makeStyles","theme","palette","secondary","marginRight","spacing","marginTop","marginBottom","fontFamily","fontStyle","fontWeight","fontSize","lineHeight","optionsList","GenderRadio","FormControl","component","style","RadioGroup","aria-label","row","width","FormControlLabel","labelPlacement","control","Radio","_extends","Object","assign","i","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","y","height","rx","fill","_ref3","_ref4","_ref5","_ref","svgRef","title","props","viewBox","ref","ForwardRef","forwardRef","DatePicker","handleButtonMouseDown","preventDefault","CustomInput","onClick","margin","OutlinedInput","endAdornment","InputAdornment","IconButton","onMouseDown","inputComponent","TextMaskCustom","CustomInputRef","React","innerRef","dateFormat","selected","customInput","inputRef","other","inputElement","mask","saveChangeToRedux","handleSubmit","getButtons","initialData","validationSchema","profileFormValidationSchema","validateOnChange","validateOnBlur","enableReinitialize","initialValues","birthDate","Date","onSubmit","values","StyledForm","firstName","InputField","lastName","email","address","getBackButton"],"mappings":"yRAwBA,IAAMA,EAAsB,CAAEC,QAAS,MAE1BC,EAAgCC,gBAC3C,YAA4D,IAAzDC,EAAwD,EAAxDA,YAAaC,EAA2C,EAA3CA,SAAUC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACtCC,EAAUC,IADyC,EAErBC,mBAAS,IAFY,mBAElDC,EAFkD,KAEtCC,EAFsC,OAG3BF,mBAAS,IAHkB,mBAGlDG,EAHkD,KAGzCC,EAHyC,KAInDC,EAASC,kBAAO,GAEA,qBAAXC,QAA2BF,EAAOhB,UACtCmB,SAASC,cAAc,iBAtBlC,SAAoBC,EAAKC,EAAUC,GACjC,GAAKD,EAAL,CAIA,IAAME,EAASL,SAASM,cAAc,UACtCD,EAAOE,aAAa,QAAS,IAC7BF,EAAOE,aAAa,KAAMH,GAC1BC,EAAOH,IAAMA,EACbC,EAASK,YAAYH,IAcfI,CACE,uGACAT,SAASC,cAAc,QACvB,eAIJJ,EAAOhB,SAAU,GAGnB,IAAM6B,EAAe,SAAAC,GACnBjB,EAAciB,EAAMC,OAAOC,QAGvBC,EAAQC,mBACZ,kBACEC,KAAS,SAACC,EAAOC,GACftC,EAAoBC,QAAQsC,oBAAoBF,EAAOC,KACtD,OACL,IA6BF,OA1BAE,qBAAU,WACR,IAAIC,GAAS,EAKb,IAHKzC,EAAoBC,SAAWkB,OAAOuB,SACzC1C,EAAoBC,QAAU,IAAIkB,OAAOuB,OAAOC,KAAKC,OAAOC,qBAEzD7C,EAAoBC,QAAzB,CAIA,GAAmB,KAAfY,EAWJ,OANAqB,EAAM,CAAEG,MAAOxB,IAAc,SAAAiC,GACvBL,GACFzB,EAAW8B,GAAW,OAInB,WACLL,GAAS,GAXTzB,EAAW,OAaZ,CAACH,EAAYqB,IAGd,kBAACa,EAAA,EAAD,CACEC,eAAgB,SAAAC,GAAM,MACF,kBAAXA,EAAsBA,EAASA,EAAOC,aAE/CC,SAAU,SAACpB,EAAOE,GAAR,OACRzB,EAAK4C,cAAc9C,EAAM+C,KAAMpB,GAASA,EAAMiB,cAEhDI,cAAe,SAAAC,GAAC,OAAIA,GACpB/B,GAAG,oBACHS,MAAO3B,EAAM2B,MACbuB,oBAAkB,EAClBC,oBAAkB,EAClB1C,QAASA,EACT2C,cAAY,EACZC,KAAK,QACLC,UAAQ,EACRC,YAAa,SAAAC,GAAM,OACjB,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAWvD,EAAQwD,gBACjC,kBAACH,EAAA,EAAD,CAAMC,WAAS,EAACG,QAAQ,iBACtB,2BAAOC,QAAS9D,EAAM+C,MAAtB,IAA8B9C,EAA9B,KACCF,GAAY,uCAGf,kBAACgE,EAAA,EAAD,eACEJ,UAAWvD,EAAQ4D,YACnBlE,YAAaA,EACb+C,SAAUrB,EACVyC,QAAQ,WACRlB,KAAM/C,EAAM+C,KACZ7B,GAAIlB,EAAM+C,MACNS,EAPN,CAQEU,WAAS,EACTC,WAAS,KAGVhE,GAAU,kBAACiE,EAAA,EAAD,CAAYzC,MAAOxB,MAGlCkE,aAAc,SAAA1B,GACZ,IAAM2B,EACJ3B,EAAO4B,sBAAsBC,6BACzBC,EAAQC,IACZ/B,EAAO4B,sBAAsBI,UAC7BL,EAAQM,KAAI,SAAAC,GAAK,MAAI,CAACA,EAAMC,OAAQD,EAAMC,OAASD,EAAME,YAG3D,OACE,kBAACtB,EAAA,EAAD,CAAMC,WAAS,EAACsB,WAAW,UACzB,kBAACvB,EAAA,EAAD,CAAMwB,MAAI,GACR,kBAAC,IAAD,CAAgBtB,UAAWvD,EAAQ8E,QAErC,kBAACzB,EAAA,EAAD,CAAMwB,MAAI,EAACE,IAAE,GACVV,EAAMG,KAAI,SAACQ,EAAMC,GAAP,OACT,0BAAMC,IAAKD,GAAQD,EAAKG,SAG1B,kBAACC,EAAA,EAAD,CAAYvB,QAAQ,QAAQwB,MAAM,iBAC/B9C,EAAO4B,sBAAsBmB,wBAW1CrF,EAAYsF,aAAW,SAAAC,GAAK,MAAK,CACrCV,KAAM,CACJO,MAAOG,EAAMC,QAAQN,KAAKO,UAC1BC,YAAaH,EAAMI,QAAQ,IAG7BpC,eAAgB,CACdqC,UAAW,OACXC,aAAc,QAGhBlC,YAAa,CACXkC,aAAc,MAEdC,WAAY,SACZC,UAAW,SACXC,WAAY,MACZC,SAAU,OACVC,WAAY,QAGdC,YAAa,CACXL,WAAY,SACZC,UAAW,SACXC,WAAY,MACZC,SAAU,OACVC,WAAY,Y,oCCxKHE,EAAc5G,gBAAK,YAAsB,IAAnBG,EAAkB,EAAlBA,MAAOE,EAAW,EAAXA,KACxC,OACE,kBAACwG,EAAA,EAAD,CAAaC,UAAU,WAAWC,MAAO,CAAEX,UAAW,SACpD,wCACA,kBAACY,EAAA,EAAD,CACEC,aAAW,WACXnF,MAAO3B,EAAM2B,MACboF,KAAG,EACHlE,SAAU,SAAApB,GAAK,OAAIvB,EAAK4C,cAAc9C,EAAM+C,KAAMtB,EAAMC,OAAOC,SAC/D,kBAAC8B,EAAA,EAAD,CAAMC,WAAS,EAACG,QAAQ,gBAAgB+C,MAAO,CAAEI,MAAO,QACtD,kBAACC,EAAA,EAAD,CACEC,eAAe,MACfvF,MAAM,OACN1B,MAAM,OACNkH,QAAS,kBAACC,EAAA,EAAD,CAAO3B,MAAM,cAGxB,kBAACwB,EAAA,EAAD,CACEC,eAAe,MACfvF,MAAM,SACN1B,MAAM,SACNkH,QAAS,kBAACC,EAAA,EAAD,CAAO3B,MAAM,oB,kDC/BlC,SAAS4B,IAA2Q,OAA9PA,EAAWC,OAAOC,QAAU,SAAU7F,GAAU,IAAK,IAAI8F,EAAI,EAAGA,EAAIC,UAAU1C,OAAQyC,IAAK,CAAE,IAAIE,EAASD,UAAUD,GAAI,IAAK,IAAIlC,KAAOoC,EAAcJ,OAAOK,UAAUC,eAAeC,KAAKH,EAAQpC,KAAQ5D,EAAO4D,GAAOoC,EAAOpC,IAAY,OAAO5D,IAA2BoG,MAAMC,KAAMN,WAEhT,SAASO,EAAyBN,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,GAAI,IAAkEpC,EAAKkC,EAAnE9F,EAEzF,SAAuCgG,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,GAAI,IAA2DpC,EAAKkC,EAA5D9F,EAAS,GAAQwG,EAAaZ,OAAOa,KAAKT,GAAqB,IAAKF,EAAI,EAAGA,EAAIU,EAAWnD,OAAQyC,IAAOlC,EAAM4C,EAAWV,GAAQS,EAASG,QAAQ9C,IAAQ,IAAa5D,EAAO4D,GAAOoC,EAAOpC,IAAQ,OAAO5D,EAFxM2G,CAA8BX,EAAQO,GAAuB,GAAIX,OAAOgB,sBAAuB,CAAE,IAAIC,EAAmBjB,OAAOgB,sBAAsBZ,GAAS,IAAKF,EAAI,EAAGA,EAAIe,EAAiBxD,OAAQyC,IAAOlC,EAAMiD,EAAiBf,GAAQS,EAASG,QAAQ9C,IAAQ,GAAkBgC,OAAOK,UAAUa,qBAAqBX,KAAKH,EAAQpC,KAAgB5D,EAAO4D,GAAOoC,EAAOpC,IAAU,OAAO5D,EAMne,IAAI,EAEJ,IAAMN,cAAc,OAAQ,CAC1B6B,EAAG,EACHwF,EAAG,EACHzB,MAAO,GACP0B,OAAQ,GACRC,GAAI,EACJC,KAAM,YAGJC,EAEJ,IAAMzH,cAAc,OAAQ,CAC1B6B,EAAG,EACHwF,EAAG,EACHzB,MAAO,GACP0B,OAAQ,EACRE,KAAM,UAGJE,EAEJ,IAAM1H,cAAc,OAAQ,CAC1B6B,EAAG,EACHwF,EAAG,EACHzB,MAAO,EACP0B,OAAQ,EACRC,GAAI,EACJC,KAAM,YAGJG,EAEJ,IAAM3H,cAAc,OAAQ,CAC1B6B,EAAG,GACHwF,EAAG,EACHzB,MAAO,EACP0B,OAAQ,EACRC,GAAI,EACJC,KAAM,YAGJ,EAAc,SAAqBI,GACrC,IAAIC,EAASD,EAAKC,OACdC,EAAQF,EAAKE,MACbC,EAAQnB,EAAyBgB,EAAM,CAAC,SAAU,UAEtD,OAAO,IAAM5H,cAAc,MAAOiG,EAAS,CACzCL,MAAO,GACP0B,OAAQ,GACRU,QAAS,YACTR,KAAM,OACNS,IAAKJ,GACJE,GAAQD,EAAQ,IAAM9H,cAAc,QAAS,KAAM8H,GAAS,KAAM,EAAOL,EAAOC,EAAOC,IAGxFO,EAAa,IAAMC,YAAW,SAAUJ,EAAOE,GACjD,OAAO,IAAMjI,cAAc,EAAaiG,EAAS,CAC/C4B,OAAQI,GACPF,O,GAEU,I,0BCpDFK,EAAa3J,gBAAK,YAA8B,IAA3BG,EAA0B,EAA1BA,MAAOE,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACvCC,EAAUC,IAEVoJ,EAAwB,SAAAhI,GAC5BA,EAAMiI,kBAGFC,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAS/G,EAAZ,EAAYA,SAAUlB,EAAtB,EAAsBA,MAAtB,OAClB,kBAAC+E,EAAA,EAAD,CACE/C,UAAWvD,EAAQsD,UACnBO,QAAQ,WACR4F,OAAO,SACPxG,KAAK,SACL,kBAACI,EAAA,EAAD,CAAMC,WAAS,EAACG,QAAQ,iBACtB,8CACA,sCAGF,kBAACiG,EAAA,EAAD,CACEnI,MAAOA,EACP7B,YAAY,aACZ+C,SAAUA,EACVkH,aACE,kBAACC,EAAA,EAAD,CAAgB/I,SAAS,OACvB,kBAACgJ,EAAA,EAAD,CAAYC,YAAaT,EAAuBG,QAASA,GACvD,kBAAC,EAAD,QAINO,eAAgBC,MAKhBC,EAAiBC,IAAMf,YAAW,SAACJ,EAAOE,GAAR,OACtC,kBAACM,EAAD,eAAaY,SAAUlB,GAASF,OAGlC,OACE,oCACE,kBAAC,IAAD,CACEqB,WAAW,UACXC,SAAUzK,EAAM2B,MAChBA,MAAO3B,EAAM2B,MACbkB,SAAU,SAAAlB,GAAK,OAAIzB,EAAK4C,cAAc9C,EAAM+C,KAAMpB,IAClD+I,YAAa,kBAACL,EAAD,QAGdlK,GAAU,kBAACiE,EAAA,EAAD,CAAYzC,MAAOxB,QAKpC,SAASiK,EAAejB,GAAQ,IACtBwB,EAAuBxB,EAAvBwB,SAAaC,EADQ,YACEzB,EADF,cAG7B,OACE,kBAAC,IAAD,iBACMyB,EADN,CAEEvB,IAAK,SAAAA,GACHsB,EAAStB,EAAMA,EAAIwB,aAAe,OAEpCC,KAAM,CACJ,QACA,QACA,IACA,QACA,QACA,IACA,QACA,QACA,QACA,YAMR,IAAMzK,EAAYsF,aAAW,SAAAC,GAAK,MAAK,CACrClC,UAAW,CACT,SAAU,CACRyC,WAAY,SACZC,UAAW,SACXC,WAAY,SACZC,SAAU,OACVC,WAAY,OACZd,MAAO,gB,kBCTE5F,0BAlFK,SAAC,GAKd,IAJLkL,EAII,EAJJA,kBACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,WACAC,EACI,EADJA,YAEA,OACE,6BACE,kBAAC,IAAD,CACEC,iBAAkBC,IAClBC,kBAAkB,EAClBC,gBAAgB,EAChBC,oBAAkB,EAClBC,cAAa,eACRN,EADQ,CAEXO,UAAWP,EAAYO,WAAa,IAAIC,OAE1CC,SAAUX,IACT,gBAAGY,EAAH,EAAGA,OAAQzL,EAAX,EAAWA,OAAX,OACC,kBAACsD,EAAA,EAAD,CAAMC,WAAS,EAACG,QAAQ,eAAe+C,MAAO,CAAEX,UAAW,SACxD8E,EAAkBa,EAAQV,GAE3B,kBAACzH,EAAA,EAAD,CAAMwB,MAAI,EAACE,GAAI,GACb,kBAAC0G,EAAA,EAAD,KACE,kBAAC,IAAD,CACE1L,OAAQA,EAAO2L,UACfhM,YAAY,aACZ6G,UAAWoF,IACX9L,MAAM,aACN8C,KAAK,YACLhD,UAAQ,IAGV,kBAAC,IAAD,CACEI,OAAQA,EAAO6L,SACflM,YAAY,YACZ6G,UAAWoF,IACX9L,MAAM,YACN8C,KAAK,WACLhD,UAAQ,IAGV,kBAAC,IAAD,CACEI,OAAQA,EAAOsL,UACf9E,UAAW6C,EACXzG,KAAK,gBAKX,kBAACU,EAAA,EAAD,CAAMwB,MAAI,EAACE,GAAI,GACb,kBAAC0G,EAAA,EAAD,KACE,kBAAC,IAAD,CACE/L,YAAY,cACZ6G,UAAWoF,IACX5L,OAAQA,EAAO8L,MACfhM,MAAM,QACN8C,KAAK,QACLhD,UAAQ,IAGV,kBAAC,IAAD,CACE4G,UAAW/G,EACXE,YAAY,qBACZK,OAAQA,EAAO+L,QACfjM,MAAM,UACN8C,KAAK,UACLhD,UAAQ,IAGV,kBAAC,IAAD,CAAO4G,UAAWF,EAAa1D,KAAK,WAEnCkI,EAAW,CAAEkB,eAAe,EAAMhM,OAAO,eAAMA","file":"static/js/4.12bde562.chunk.js","sourcesContent":["import React, { memo, useMemo, useEffect, useState, useRef } from \"react\";\n\nimport parse from \"autosuggest-highlight/parse\";\nimport throttle from \"lodash.throttle\";\n\nimport { InputError } from \"./InputError\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TextField, Grid, Typography } from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\n\nfunction loadScript(src, position, id) {\n  if (!position) {\n    return;\n  }\n\n  const script = document.createElement(\"script\");\n  script.setAttribute(\"async\", \"\");\n  script.setAttribute(\"id\", id);\n  script.src = src;\n  position.appendChild(script);\n}\n\nconst autocompleteService = { current: null };\n\nexport const InputGooglePlacesAutocomplete = memo(\n  ({ placeholder, required, field, label, form, errors }) => {\n    const classes = useStyles();\n    const [inputValue, setInputValue] = useState(\"\");\n    const [options, setOptions] = useState([]);\n    const loaded = useRef(false);\n\n    if (typeof window !== \"undefined\" && !loaded.current) {\n      if (!document.querySelector(\"#google-maps\")) {\n        loadScript(\n          \"https://maps.googleapis.com/maps/api/js?key=AIzaSyBQW3QCxUsbCPT-gSm9BFhwO0Isoxy4jvk&libraries=places\",\n          document.querySelector(\"head\"),\n          \"google-maps\"\n        );\n      }\n\n      loaded.current = true;\n    }\n\n    const handleChange = event => {\n      setInputValue(event.target.value);\n    };\n\n    const fetch = useMemo(\n      () =>\n        throttle((input, callback) => {\n          autocompleteService.current.getPlacePredictions(input, callback);\n        }, 400),\n      []\n    );\n\n    useEffect(() => {\n      let active = true;\n\n      if (!autocompleteService.current && window.google) {\n        autocompleteService.current = new window.google.maps.places.AutocompleteService();\n      }\n      if (!autocompleteService.current) {\n        return undefined;\n      }\n\n      if (inputValue === \"\") {\n        setOptions([]);\n        return undefined;\n      }\n\n      fetch({ input: inputValue }, results => {\n        if (active) {\n          setOptions(results || []);\n        }\n      });\n\n      return () => {\n        active = false;\n      };\n    }, [inputValue, fetch]);\n\n    return (\n      <Autocomplete\n        getOptionLabel={option =>\n          typeof option === \"string\" ? option : option.description\n        }\n        onChange={(event, value) =>\n          form.setFieldValue(field.name, value && value.description)\n        }\n        filterOptions={x => x}\n        id=\"google-map-places\"\n        value={field.value}\n        disableOpenOnFocus\n        includeInputInList\n        options={options}\n        autoComplete\n        size=\"small\"\n        freeSolo\n        renderInput={params => (\n          <Grid container className={classes.fieldContainer}>\n            <Grid container justify=\"space-between\">\n              <label htmlFor={field.name}> {label} </label>\n              {required && <label> * </label>}\n            </Grid>\n\n            <TextField\n              className={classes.fieldStyles}\n              placeholder={placeholder}\n              onChange={handleChange}\n              variant=\"outlined\"\n              name={field.name}\n              id={field.name}\n              {...params}\n              fullWidth\n              multiline\n            />\n\n            {errors && <InputError value={errors} />}\n          </Grid>\n        )}\n        renderOption={option => {\n          const matches =\n            option.structured_formatting.main_text_matched_substrings;\n          const parts = parse(\n            option.structured_formatting.main_text,\n            matches.map(match => [match.offset, match.offset + match.length])\n          );\n\n          return (\n            <Grid container alignItems=\"center\">\n              <Grid item>\n                <LocationOnIcon className={classes.icon} />\n              </Grid>\n              <Grid item xs>\n                {parts.map((part, index) => (\n                  <span key={index}>{part.text}</span>\n                ))}\n\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  {option.structured_formatting.secondary_text}\n                </Typography>\n              </Grid>\n            </Grid>\n          );\n        }}\n      />\n    );\n  }\n);\n\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    color: theme.palette.text.secondary,\n    marginRight: theme.spacing(2)\n  },\n\n  fieldContainer: {\n    marginTop: \"16px\",\n    marginBottom: \"3rem\"\n  },\n\n  fieldStyles: {\n    marginBottom: \"8px\",\n\n    fontFamily: \"Roboto\",\n    fontStyle: \"normal\",\n    fontWeight: \"500\",\n    fontSize: \"14px\",\n    lineHeight: \"16px\"\n  },\n\n  optionsList: {\n    fontFamily: \"Roboto\",\n    fontStyle: \"normal\",\n    fontWeight: \"500\",\n    fontSize: \"14px\",\n    lineHeight: \"16px\"\n  }\n}));\n","import React, { memo } from \"react\";\n\nimport {\n  FormControlLabel,\n  FormControl,\n  RadioGroup,\n  Radio,\n  Grid\n} from \"@material-ui/core\";\n\nexport const GenderRadio = memo(({ field, form }) => {\n  return (\n    <FormControl component=\"fieldset\" style={{ marginTop: \"22px\" }}>\n      <span>Gender</span>\n      <RadioGroup\n        aria-label=\"position\"\n        value={field.value}\n        row\n        onChange={event => form.setFieldValue(field.name, event.target.value)}>\n        <Grid container justify=\"space-between\" style={{ width: \"70%\" }}>\n          <FormControlLabel\n            labelPlacement=\"end\"\n            value=\"Male\"\n            label=\"Male\"\n            control={<Radio color=\"primary\" />}\n          />\n\n          <FormControlLabel\n            labelPlacement=\"end\"\n            value=\"Female\"\n            label=\"Female\"\n            control={<Radio color=\"primary\" />}\n          />\n        </Grid>\n      </RadioGroup>\n    </FormControl>\n  );\n});\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"rect\", {\n  x: 1,\n  y: 4,\n  width: 13,\n  height: 10,\n  rx: 2,\n  fill: \"#CED9E5\"\n});\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"rect\", {\n  x: 1,\n  y: 6,\n  width: 13,\n  height: 2,\n  fill: \"white\"\n});\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"rect\", {\n  x: 3,\n  y: 2,\n  width: 2,\n  height: 3,\n  rx: 1,\n  fill: \"#CED9E5\"\n});\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"rect\", {\n  x: 10,\n  y: 2,\n  width: 2,\n  height: 3,\n  rx: 1,\n  fill: \"#CED9E5\"\n});\n\nvar SvgCalendar = function SvgCalendar(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 15,\n    height: 15,\n    viewBox: \"0 0 15 15\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgCalendar, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/calendar.225e44e2.svg\";\nexport { ForwardRef as ReactComponent };","import React, { memo } from \"react\";\nimport ReactDatePicker from \"react-datepicker\";\nimport InputMask from \"react-text-mask\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport { ReactComponent as CalendarIcon } from \"../images/icons/calendar.svg\";\n\nimport { InputError } from \"./InputError\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  InputAdornment,\n  OutlinedInput,\n  FormControl,\n  IconButton,\n  Grid\n} from \"@material-ui/core\";\n\nexport const DatePicker = memo(({ field, form, errors }) => {\n  const classes = useStyles();\n\n  const handleButtonMouseDown = event => {\n    event.preventDefault();\n  };\n\n  const CustomInput = ({ onClick, onChange, value }) => (\n    <FormControl\n      className={classes.container}\n      variant=\"outlined\"\n      margin=\"normal\"\n      size=\"small\">\n      <Grid container justify=\"space-between\">\n        <span> Birth date </span>\n        <span> * </span>\n      </Grid>\n\n      <OutlinedInput\n        value={value}\n        placeholder=\"DD/MM/YYYY\"\n        onChange={onChange}\n        endAdornment={\n          <InputAdornment position=\"end\">\n            <IconButton onMouseDown={handleButtonMouseDown} onClick={onClick}>\n              <CalendarIcon />\n            </IconButton>\n          </InputAdornment>\n        }\n        inputComponent={TextMaskCustom}\n      />\n    </FormControl>\n  );\n\n  const CustomInputRef = React.forwardRef((props, ref) => (\n    <CustomInput innerRef={ref} {...props} />\n  ));\n\n  return (\n    <>\n      <ReactDatePicker\n        dateFormat=\"dd/MM/y\"\n        selected={field.value}\n        value={field.value}\n        onChange={value => form.setFieldValue(field.name, value)}\n        customInput={<CustomInputRef />}\n      />\n\n      {errors && <InputError value={errors} />}\n    </>\n  );\n});\n\nfunction TextMaskCustom(props) {\n  const { inputRef, ...other } = props;\n\n  return (\n    <InputMask\n      {...other}\n      ref={ref => {\n        inputRef(ref ? ref.inputElement : null);\n      }}\n      mask={[\n        /[0-9]/,\n        /[0-9]/,\n        \"/\",\n        /[0-9]/,\n        /[0-9]/,\n        \"/\",\n        /[0-9]/,\n        /[0-9]/,\n        /[0-9]/,\n        /[0-9]/\n      ]}\n    />\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    \"& span\": {\n      fontFamily: \"Roboto\",\n      fontStyle: \"normal\",\n      fontWeight: \"normal\",\n      fontSize: \"14px\",\n      lineHeight: \"16px\",\n      color: \"#657C9A\"\n    }\n  }\n}));\n","import React, { memo } from \"react\";\nimport { Formik, Field } from \"formik\";\n\nimport { profileFormValidationSchema } from \"../../utils/validations\";\n\nimport { InputGooglePlacesAutocomplete } from \"../../components/InputGooglePlacesAutocomplete\";\nimport { GenderRadio } from \"../../components/GenderRadio.jsx\";\nimport { DatePicker } from \"../../components/DatePicker\";\nimport { InputField } from \"../../components/InputField\";\nimport { StyledForm } from \"../../components/StyledForm\";\n\nimport { Grid } from \"@material-ui/core\";\n\nconst ProfileForm = ({\n  saveChangeToRedux,\n  handleSubmit,\n  getButtons,\n  initialData\n}) => {\n  return (\n    <div>\n      <Formik\n        validationSchema={profileFormValidationSchema}\n        validateOnChange={false}\n        validateOnBlur={false}\n        enableReinitialize\n        initialValues={{\n          ...initialData,\n          birthDate: initialData.birthDate || new Date()\n        }}\n        onSubmit={handleSubmit}>\n        {({ values, errors }) => (\n          <Grid container justify=\"space-around\" style={{ marginTop: \"2rem\" }}>\n            {saveChangeToRedux(values, initialData)}\n\n            <Grid item xs={4}>\n              <StyledForm>\n                <Field\n                  errors={errors.firstName}\n                  placeholder=\"First name\"\n                  component={InputField}\n                  label=\"First name\"\n                  name=\"firstName\"\n                  required\n                />\n\n                <Field\n                  errors={errors.lastName}\n                  placeholder=\"Last name\"\n                  component={InputField}\n                  label=\"Last name\"\n                  name=\"lastName\"\n                  required\n                />\n\n                <Field\n                  errors={errors.birthDate}\n                  component={DatePicker}\n                  name=\"birthDate\"\n                />\n              </StyledForm>\n            </Grid>\n\n            <Grid item xs={4}>\n              <StyledForm>\n                <Field\n                  placeholder=\"Enter email\"\n                  component={InputField}\n                  errors={errors.email}\n                  label=\"Email\"\n                  name=\"email\"\n                  required\n                />\n\n                <Field\n                  component={InputGooglePlacesAutocomplete}\n                  placeholder=\"Enter your address\"\n                  errors={errors.address}\n                  label=\"Address\"\n                  name=\"address\"\n                  required\n                />\n\n                <Field component={GenderRadio} name=\"gender\" />\n\n                {getButtons({ getBackButton: true, errors: { ...errors } })}\n              </StyledForm>\n            </Grid>\n          </Grid>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default memo(ProfileForm);\n"],"sourceRoot":""}