{"version":3,"sources":["utils/constants.js","store/userListModule.js","store/temporaryUserModule.js","store/currentUserModule.js","sagas/temporaryUserSagas.js","sagas/currentUserSagas.js","sagas/userListSagas.js","sagas/rootSaga.js","pages/App.jsx","index.js","utils/helpers.js","store/UIModule.js","utils/database.js"],"names":["TEMPORARY_USER_ID","CAPABILITIES_TAB_INDEX","CONTACTS_TAB_INDEX","PROFILE_TAB_INDEX","ACCOUNT_TAB_INDEX","MAX_AVATAR_IMAGE_SIZE","fields","account","passwordConfirmation","password","username","avatar","profile","firstName","birthDate","lastName","address","gender","email","contacts","mainLanguage","facebookLink","gitHubLink","company","phones","fax","capabilities","additionalInformation","hobbies","skills","tabs","temporaryUserModule","createSlice","name","initialState","userList","total","reducers","getUsersWithDB","state","action","payload","addUserToList","push","deleteUserFromList","filter","user","id","setTotal","searchUsersByName","getTestUsers","updateUser","actions","reducer","databaseHasUserData","userData","getTemporaryUserWithDB","setTemporaryUserData","deleteTemporaryUser","databaseHasTemporaryUser","syncTemporaryUserDataWithDB","checkTemporaryUserData","currentUserModule","setCurrentUserData","getUserFromList","saveCurrentUser","checkTemporaryUserDataInDB","removeTemporaryUser","getTemporaryUser","syncTemporaryUserWithDB","temporaryUserSagas","put","setLoading","call","getTemporaryUserFromDB","temporaryUser","select","temporaryUserData","localTemporaryUser","checkObjectPropsIsNotEmpty","isEqual","deleteTemporaryUserFromDB","setError","putTemporaryUserToDB","all","takeLatest","type","getCurrentUser","updateUserAfterEditing","currentUserSagas","userID","getCurrentUserFromDB","currentUser","updateUserListInDB","getUserListFromDB","pageNumber","pageSize","userListWithDB","getUserListCount","userListCount","getUserListWithDB","addUserToDatabaseList","deleteUserFromDB","getFilteredUserList","putTestUserListToDB","userListSagas","addUserToUserListFromDB","deleteUserFromUserListInDB","keywords","delay","filterUserList","testUsers","forEach","addTestUserToDB","takeEvery","rootSaga","fork","PageNotFound","lazy","Header","ListOfUsers","AddNewUser","UserView","Editing","App","fallback","CircularProgress","path","exact","render","to","component","temporaryUserReducer","currentUserData","currentUserReducer","listOfUsers","userListReducer","UIModule","sagaMiddleware","createSagaMiddleware","middleware","getDefaultMiddleware","serializableCheck","thunk","store","configureStore","devTools","window","__REDUX_DEVTOOLS_EXTENSION__","run","ReactDOM","document","getElementById","setQueryString","queryName","queryValue","additionalName","additionalValue","pathname","history","createHashHistory","location","search","getQueryStringValue","URLSearchParams","get","checkedObject","key","length","getTabKeyByValue","value","Object","keys","find","getTabValueByKey","checkDataInTabsAfterReload","capabilitiesData","contactsData","profileData","tabName","capabilitiesTab","contactsTab","profileTab","calculatePaginationCount","Math","ceil","createTestUserList","users","i","floor","random","DateTime","local","minus","year","toJSDate","createdAt","days","hours","toMillis","updatedAt","isLoading","isError","database","Dexie","version","stores","delete","prevDBData","currentData","orderBy","reverse","offset","limit","toArray","add","Date","getTime","userId","update","count","validateEditedUser","keyPath","a","getState","where","first","editeduser","toLowerCase","includes"],"mappings":"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","file":"static/js/main.2cab1090.chunk.js","sourcesContent":["export const TEMPORARY_USER_ID = 1;\n\nexport const CAPABILITIES_TAB_INDEX = 3;\n\nexport const CONTACTS_TAB_INDEX = 2;\n\nexport const PROFILE_TAB_INDEX = 1;\n\nexport const ACCOUNT_TAB_INDEX = 0;\n\nexport const MAX_AVATAR_IMAGE_SIZE = 1000000;\n\nexport const fields = {\n  account: {\n    passwordConfirmation: \"\",\n    password: \"\",\n    username: \"\",\n    avatar: \"\"\n  },\n\n  profile: {\n    firstName: \"\",\n    birthDate: \"\",\n    lastName: \"\",\n    address: \"\",\n    gender: \"\",\n    email: \"\"\n  },\n\n  contacts: {\n    mainLanguage: \"\",\n    facebookLink: \"\",\n    gitHubLink: \"\",\n    company: \"\",\n    phones: [\"\"],\n    fax: \"\"\n  },\n\n  capabilities: {\n    additionalInformation: \"\",\n    hobbies: [],\n    skills: []\n  }\n};\n\nexport const tabs = {\n  capabilities: CAPABILITIES_TAB_INDEX,\n  contacts: CONTACTS_TAB_INDEX,\n  profile: PROFILE_TAB_INDEX,\n  account: ACCOUNT_TAB_INDEX\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst temporaryUserModule = createSlice({\n  name: \"userList\",\n\n  initialState: {\n    userList: [],\n    total: 0\n  },\n\n  reducers: {\n    getUsersWithDB: (state, action) => {\n      state.userList = action.payload || [];\n    },\n\n    addUserToList: (state, action) => {\n      state.userList.push(action.payload);\n    },\n\n    deleteUserFromList: (state, action) => {\n      state.userList = state.userList.filter(\n        user => user.id !== action.payload.id\n      );\n    },\n\n    setTotal: (state, action) => {\n      state.total = action.payload;\n    },\n\n    searchUsersByName() {},\n\n    getTestUsers() {},\n\n    updateUser() {}\n  }\n});\n\nconst { actions, reducer } = temporaryUserModule;\n\nexport const {\n  deleteUserFromList,\n  searchUsersByName,\n  getUsersWithDB,\n  addUserToList,\n  getTestUsers,\n  updateUser,\n  setTotal\n} = actions;\n\nexport default reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nimport { fields } from \"../utils/constants.js\";\n\nconst { account, profile, contacts, capabilities } = fields;\n\nconst initialState = {\n  databaseHasUserData: false,\n  userData: {\n    ...account,\n    ...profile,\n    ...contacts,\n    ...capabilities\n  }\n};\n\nconst temporaryUserModule = createSlice({\n  name: \"temporaryUser\",\n\n  initialState,\n\n  reducers: {\n    getTemporaryUserWithDB: (state, action) => {\n      state.userData = { ...state.userData, ...action.payload };\n    },\n\n    setTemporaryUserData: (state, action) => {\n      state.userData = { ...state.userData, ...action.payload };\n    },\n\n    deleteTemporaryUser: (state, action) => {\n      state.userData = initialState.userData;\n    },\n\n    databaseHasTemporaryUser: (state, action) => {\n      state.databaseHasUserData = action.payload;\n    },\n\n    syncTemporaryUserDataWithDB() {},\n\n    checkTemporaryUserData() {}\n  }\n});\n\nconst { actions, reducer } = temporaryUserModule;\n\nexport const {\n  syncTemporaryUserDataWithDB,\n  databaseHasTemporaryUser,\n  checkTemporaryUserData,\n  getTemporaryUserWithDB,\n  setTemporaryUserData,\n  deleteTemporaryUser\n} = actions;\n\nexport default reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nimport { fields } from \"../utils/constants.js\";\n\nconst { account, profile, contacts, capabilities } = fields;\n\nconst currentUserModule = createSlice({\n  name: \"currentUser\",\n\n  initialState: {\n    userData: {\n      ...account,\n      ...profile,\n      ...contacts,\n      ...capabilities\n    }\n  },\n\n  reducers: {\n    setCurrentUserData: (state, action) => {\n      state.userData = { ...state.userData, ...action.payload };\n    },\n\n    getUserFromList() {},\n\n    saveCurrentUser() {}\n  }\n});\n\nconst { actions, reducer } = currentUserModule;\n\nexport const { setCurrentUserData, getUserFromList, saveCurrentUser } = actions;\n\nexport default reducer;\n","import { takeLatest, select, call, all, put } from \"redux-saga/effects\";\n\nimport { checkObjectPropsIsNotEmpty } from \"../utils/helpers.js\";\n\nimport isEqual from \"lodash.isequal\";\n\nimport {\n  deleteTemporaryUserFromDB,\n  getTemporaryUserFromDB,\n  putTemporaryUserToDB\n} from \"../utils/database.js\";\n\nimport {\n  syncTemporaryUserDataWithDB,\n  databaseHasTemporaryUser,\n  checkTemporaryUserData,\n  getTemporaryUserWithDB,\n  setTemporaryUserData,\n  deleteTemporaryUser\n} from \"../store/temporaryUserModule.js\";\n\nimport { setLoading, setError } from \"../store/UIModule.js\";\n\nfunction* checkTemporaryUserDataInDB() {\n  yield put(setLoading(true));\n\n  const temporaryUser = yield call(() => getTemporaryUserFromDB());\n\n  const localTemporaryUser = yield select(\n    state => state.temporaryUserData.userData\n  );\n\n  if (\n    temporaryUser &&\n    checkObjectPropsIsNotEmpty(temporaryUser) &&\n    !isEqual(temporaryUser, localTemporaryUser)\n  ) {\n    yield put(databaseHasTemporaryUser(true));\n  }\n\n  yield put(setLoading(false));\n}\n\nexport function* removeTemporaryUser() {\n  yield call(() => deleteTemporaryUserFromDB());\n\n  yield put(databaseHasTemporaryUser(false));\n}\n\nfunction* getTemporaryUser() {\n  yield put(databaseHasTemporaryUser(false));\n  yield put(setLoading(true));\n\n  try {\n    const temporaryUser = yield call(() => getTemporaryUserFromDB());\n\n    yield put(getTemporaryUserWithDB(temporaryUser));\n\n    yield put(setLoading(false));\n  } catch {\n    yield put(setError(true));\n  }\n}\n\nfunction* syncTemporaryUserWithDB(action) {\n  const temporaryUser = yield select(state => state.temporaryUserData.userData);\n\n  const databaseHasUserData = yield select(\n    state => state.temporaryUserData.databaseHasUserData\n  );\n\n  if (databaseHasUserData) {\n    yield call(() => removeTemporaryUser());\n  }\n\n  yield call(() => putTemporaryUserToDB(temporaryUser));\n}\n\nexport default function* temporaryUserSagas() {\n  yield all([\n    takeLatest(checkTemporaryUserData.type, checkTemporaryUserDataInDB),\n\n    takeLatest(setTemporaryUserData.type, syncTemporaryUserWithDB),\n\n    takeLatest(syncTemporaryUserDataWithDB.type, getTemporaryUser),\n\n    takeLatest(deleteTemporaryUser.type, removeTemporaryUser)\n  ]);\n}\n","import { takeLatest, call, all, put } from \"redux-saga/effects\";\n\nimport {\n  getCurrentUserFromDB,\n  updateUserListInDB,\n  getUserListFromDB,\n  getUserListCount\n} from \"../utils/database.js\";\n\nimport {\n  setCurrentUserData,\n  getUserFromList,\n  saveCurrentUser\n} from \"../store/currentUserModule.js\";\n\nimport { setLoading, setError } from \"../store/UIModule.js\";\n\nimport { getUsersWithDB, setTotal } from \"../store/userListModule.js\";\n\nfunction* getCurrentUser(action) {\n  yield put(setLoading(true));\n\n  const userID = action.payload.id;\n\n  try {\n    const userData = yield call(() => getCurrentUserFromDB(userID));\n\n    yield put(setCurrentUserData(userData));\n\n    yield put(setLoading(false));\n  } catch {\n    yield put(setError(true));\n  }\n}\n\nfunction* updateUserAfterEditing(action) {\n  const userID = action.payload.id;\n  const currentUser = action.payload.userData;\n\n  try {\n    yield call(() => updateUserListInDB(userID, currentUser));\n\n    const userListWithDB = yield call(() =>\n      getUserListFromDB({ pageNumber: 1, pageSize: 10 })\n    );\n\n    const userListCount = yield call(() => getUserListCount());\n\n    yield put(setTotal(userListCount));\n\n    yield put(getUsersWithDB(userListWithDB));\n  } catch {\n    yield put(setError(true));\n  }\n}\n\nexport default function* currentUserSagas() {\n  yield all([\n    takeLatest(saveCurrentUser.type, updateUserAfterEditing),\n    takeLatest(getUserFromList.type, getCurrentUser)\n  ]);\n}\n","import {\n  takeLatest,\n  takeEvery,\n  select,\n  delay,\n  call,\n  all,\n  put\n} from \"redux-saga/effects\";\n\nimport {\n  deleteUserFromUserListInDB,\n  addUserToUserListFromDB,\n  getUserListFromDB,\n  getUserListCount,\n  filterUserList,\n  addTestUserToDB\n} from \"../utils/database.js\";\n\nimport {\n  deleteUserFromList,\n  searchUsersByName,\n  getUsersWithDB,\n  addUserToList,\n  getTestUsers,\n  updateUser,\n  setTotal\n} from \"../store/userListModule.js\";\n\nimport { setLoading, setError } from \"../store/UIModule.js\";\n\nimport { removeTemporaryUser } from \"./temporaryUserSagas.js\";\n\nfunction* getUserListWithDB(action) {\n  yield put(setLoading(true));\n\n  try {\n    const { pageNumber, pageSize } = action.payload;\n\n    const userList = yield call(() =>\n      getUserListFromDB({ pageNumber, pageSize })\n    );\n\n    yield put(getUsersWithDB(userList));\n\n    const userListCount = yield call(() => getUserListCount());\n\n    yield put(setTotal(userListCount));\n\n    yield put(setLoading(false));\n  } catch {\n    yield put(setError(true));\n  }\n}\n\nfunction* addUserToDatabaseList() {\n  const temporaryUser = yield select(state => state.temporaryUserData.userData);\n\n  try {\n    yield call(() => addUserToUserListFromDB(temporaryUser));\n\n    const userList = yield call(() =>\n      getUserListFromDB({ pageNumber: 1, pageSize: 10 })\n    );\n\n    yield put(getUsersWithDB(userList));\n\n    const userListCount = yield call(() => getUserListCount());\n\n    yield put(setTotal(userListCount));\n\n    yield call(() => removeTemporaryUser());\n  } catch {\n    yield put(setError(true));\n  }\n}\n\nfunction* deleteUserFromDB(action) {\n  const { pageNumber, pageSize, id } = action.payload;\n\n  try {\n    yield call(() => deleteUserFromUserListInDB(id));\n\n    const userList = yield call(() =>\n      getUserListFromDB({ pageNumber, pageSize })\n    );\n\n    yield put(getUsersWithDB(userList));\n\n    const userListCount = yield call(() => getUserListCount());\n\n    yield put(setTotal(userListCount));\n  } catch {\n    yield put(setError(true));\n  }\n}\n\nfunction* getFilteredUserList(action) {\n  const { keywords, pageNumber, pageSize } = action.payload;\n\n  yield delay(500);\n\n  yield put(setLoading(true));\n\n  try {\n    const { userList, userListCount } = yield call(() =>\n      filterUserList({ keywords, pageNumber, pageSize })\n    );\n\n    yield put(setTotal(userListCount));\n\n    yield put(getUsersWithDB(userList));\n\n    yield put(setLoading(false));\n  } catch {\n    yield put(setError(true));\n  }\n}\n\nfunction* putTestUserListToDB(action) {\n  const testUsers = action.payload;\n\n  yield call(() => testUsers.forEach(user => addTestUserToDB(user)));\n}\n\nexport default function* userListSagas() {\n  yield all([\n    takeLatest(updateUser.type, getUserListWithDB),\n\n    takeLatest(addUserToList.type, addUserToDatabaseList),\n\n    takeEvery(deleteUserFromList.type, deleteUserFromDB),\n\n    takeLatest(getTestUsers.type, putTestUserListToDB),\n\n    takeLatest(searchUsersByName.type, getFilteredUserList)\n  ]);\n}\n","import { fork } from \"redux-saga/effects\";\n\nimport temporaryUserSagas from \"./temporaryUserSagas.js\";\nimport currentUserSagas from \"./currentUserSagas.js\";\nimport userListSagas from \"./userListSagas.js\";\n\nexport default function* rootSaga() {\n  yield fork(temporaryUserSagas);\n  yield fork(currentUserSagas);\n  yield fork(userListSagas);\n}\n","import React, { Suspense, lazy } from \"react\";\nimport {\n  HashRouter as Router,\n  Redirect,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport { CircularProgress } from \"@material-ui/core\";\n\nconst PageNotFound = lazy(() => import(\"./PageNotFound.jsx\"));\nconst Header = lazy(() => import(\"./common/Header.jsx\"));\n\nconst ListOfUsers = lazy(() => import(\"./ListOfUsers.jsx\"));\nconst AddNewUser = lazy(() => import(\"./AddNewUser.jsx\"));\nconst UserView = lazy(() => import(\"./UserView.jsx\"));\nconst Editing = lazy(() => import(\"./Editing.jsx\"));\n\nconst App = () => {\n  return (\n    <Router>\n      <Suspense fallback={<CircularProgress />}>\n        <Header />\n        <Switch>\n          <Route\n            path=\"/\"\n            exact\n            render={() => <Redirect to=\"/registration?tab=account\" />}\n          />\n          <Route path=\"/registration\" exact component={AddNewUser} />\n          <Route path=\"/users\" exact component={ListOfUsers} />\n          <Route path=\"/users/edit/:id\" exact component={Editing} />\n          <Route path=\"/users/view/:id\" exact component={UserView} />\n          <Route component={PageNotFound} />\n        </Switch>\n      </Suspense>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport \"./normalize.css\";\n// import * as sw from \"./sw\";\n\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport createSagaMiddleware from \"redux-saga\";\n\n// store reducers\nimport temporaryUserReducer from \"./store/temporaryUserModule.js\";\nimport currentUserReducer from \"./store/currentUserModule.js\";\nimport userListReducer from \"./store/userListModule.js\";\nimport UIModule from \"./store/UIModule.js\";\n\nimport rootSaga from \"./sagas/rootSaga.js\";\n\nimport App from \"./pages/App\";\n\nconst reducer = {\n  temporaryUserData: temporaryUserReducer,\n  currentUserData: currentUserReducer,\n  listOfUsers: userListReducer,\n  UIModule\n};\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middleware = [\n  ...getDefaultMiddleware({ serializableCheck: false, thunk: false }),\n  sagaMiddleware\n];\n\nexport const store = configureStore({\n  reducer,\n  middleware,\n  devTools:\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n});\n\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n\n// sw.register();\n","import { createHashHistory } from \"history\";\nimport { DateTime } from \"luxon\";\n\nimport { ACCOUNT_TAB_INDEX, tabs } from \"./constants.js\";\n\nexport const setQueryString = ({\n  queryName,\n  queryValue,\n  additionalName,\n  additionalValue,\n  pathname\n}) => {\n  const history = createHashHistory();\n\n  history.push({\n    pathname: pathname || history.location.pathname,\n    search: additionalValue\n      ? `?${queryName}=${queryValue}&${additionalName}=${additionalValue}`\n      : `?${queryName}=${queryValue}`\n  });\n};\n\nexport const getQueryStringValue = ({ queryName, location }) => {\n  const params = new URLSearchParams(location);\n  const queryValue = params.get(queryName);\n\n  return queryValue;\n};\n\nexport const checkObjectPropsIsNotEmpty = checkedObject => {\n  for (let key in checkedObject) {\n    if (\n      checkedObject[key] &&\n      checkedObject[key][0] !== \"\" &&\n      checkedObject[key].length !== 0\n    ) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nexport const getTabKeyByValue = value => {\n  return Object.keys(tabs).find(key => tabs[key] === value) || \"account\";\n};\n\nexport const getTabValueByKey = key => {\n  return tabs[key] || ACCOUNT_TAB_INDEX;\n};\n\nexport const checkDataInTabsAfterReload = ({\n  capabilitiesData,\n  contactsData,\n  profileData\n}) => {\n  let tabName = \"account\";\n\n  let capabilitiesTab = true;\n  let contactsTab = true;\n  let profileTab = true;\n\n  if (checkObjectPropsIsNotEmpty(profileData)) {\n    tabName = \"profile\";\n    profileTab = false;\n  }\n\n  if (checkObjectPropsIsNotEmpty(contactsData)) {\n    contactsTab = false;\n    tabName = \"contacts\";\n  }\n\n  if (checkObjectPropsIsNotEmpty(capabilitiesData)) {\n    capabilitiesTab = false;\n    tabName = \"capabilities\";\n  }\n\n  return { capabilitiesTab, contactsTab, profileTab, tabName };\n};\n\nexport const calculatePaginationCount = total => {\n  return Math.ceil(total / 10);\n};\n\nexport const createTestUserList = () => {\n  const users = [];\n\n  for (let i = 0; i < 20; i++) {\n    users.push({\n      passwordConfirmation: \"testuser\",\n      password: \"testuser\",\n      username:\n        \"test_user\" + Math.floor(18 + Math.random() * (99999999 - 18 + 1)),\n      avatar: \"\",\n      firstName: \"Test\" + Math.floor(18 + Math.random() * (9999999 - 18 + 1)),\n      lastName: \"User\" + Math.floor(18 + Math.random() * (9999999 - 18 + 1)),\n      birthDate: DateTime.local()\n        .minus({ year: Math.floor(18 + Math.random() * (50 - 18 + 1)) })\n        .toJSDate(),\n      address: \"Test st.\",\n      gender: \"Male\",\n      email:\n        Math.floor(18 + Math.random() * (9999999 - 18 + 1)) +\n        \"test.user@gmail.com\",\n      mainLanguage: \"Russian\",\n      facebookLink: \"https://www.facebook.com\",\n      gitHubLink: \"https://github.com\",\n      company: \"Test company\",\n      phones: [\n        \"+7 (123) 123-12-31\",\n        \"+7 (123) 123-12-31\",\n        \"+7 (123) 123-12-31\"\n      ],\n      fax: \"+7 (123) 123-12-31\",\n      additionalInformation: \"This is test user additional information\",\n      hobbies: [\n        \"Art\",\n        \"Sport, fitness, aerobica and staff like that\",\n        \"I just want to play games, I’m not living in this life\"\n      ],\n      skills: [\"HTML\", \"CSS\", \"Javascript\"],\n      createdAt: DateTime.local()\n        .minus({ days: 1, hours: Math.floor(Math.random() * Math.floor(24)) })\n        .toMillis(),\n      updatedAt: DateTime.local()\n        .minus({ hours: Math.floor(Math.random() * Math.floor(24)) })\n        .toMillis()\n    });\n  }\n\n  return users;\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst UIModule = createSlice({\n  name: \"loading\",\n\n  initialState: {\n    isLoading: false,\n    isError: false\n  },\n\n  reducers: {\n    setLoading: (state, action) => {\n      state.isLoading = action.payload;\n      state.isError = false;\n    },\n\n    setError: (state, action) => {\n      state.isLoading = false;\n      state.isError = action.payload;\n    }\n  }\n});\n\nconst { actions, reducer } = UIModule;\n\nexport const { setLoading, setError } = actions;\n\nexport default reducer;\n","import Dexie from \"dexie\";\nimport { store } from \"../index.js\";\nimport { TEMPORARY_USER_ID } from \"./constants.js\";\n\nconst database = new Dexie(\"UsersData\");\n\ndatabase.version(1).stores({\n  temporaryUserData: \"++id\",\n  userList: \"++id, &username, &email, firstName, lastName, createdAt\"\n});\n\nexport const getTemporaryUserFromDB = () => {\n  const temporaryUser = database.temporaryUserData.get(TEMPORARY_USER_ID);\n\n  delete temporaryUser.id;\n\n  return temporaryUser;\n};\n\nexport const deleteTemporaryUserFromDB = () => {\n  return database.temporaryUserData.delete(TEMPORARY_USER_ID);\n};\n\nexport const putTemporaryUserToDB = (prevDBData, currentData) => {\n  return database.temporaryUserData.put({\n    ...prevDBData,\n    ...currentData,\n    id: TEMPORARY_USER_ID\n  });\n};\n\nexport const getUserListFromDB = ({ pageNumber, pageSize }) => {\n  return database.userList\n    .orderBy(\"createdAt\")\n    .reverse()\n    .offset(pageNumber * pageSize - pageSize)\n    .limit(pageSize)\n    .toArray();\n};\n\nexport const addUserToUserListFromDB = userData => {\n  return database.userList.add({\n    ...userData,\n    createdAt: new Date().getTime(),\n    updatedAt: new Date().getTime()\n  });\n};\n\nexport const updateUserListInDB = (userId, userData) => {\n  return database.userList.update(userId, userData);\n};\n\nexport const deleteUserFromUserListInDB = userId => {\n  return database.userList.delete(userId);\n};\n\nexport const getUserListCount = () => {\n  return database.userList.count();\n};\n\nexport const getCurrentUserFromDB = userId => {\n  return database.userList.get(userId);\n};\n\nexport const validateEditedUser = async (keyPath, value = \"\") => {\n  const currentUser = store.getState().currentUserData.userData;\n\n  const editeduser = await database.userList\n    .where({ [keyPath]: value })\n    .first();\n\n  return editeduser && currentUser.id === editeduser.id\n    ? true\n    : editeduser\n    ? false\n    : true;\n};\n\nexport const addTestUserToDB = user => {\n  return database.userList.add({ ...user });\n};\n\nexport const filterUserList = async ({ keywords, pageNumber, pageSize }) => {\n  if (!keywords) {\n    return {\n      userList: await getUserListFromDB({ pageNumber: 1, pageSize: 10 }),\n      userListCount: await getUserListCount()\n    };\n  }\n\n  return {\n    userList: await database.userList\n      .orderBy(\"createdAt\")\n      .reverse()\n      .filter(\n        user =>\n          user.firstName.toLowerCase().includes(keywords) ||\n          user.lastName.toLowerCase().includes(keywords)\n      )\n      .offset(pageNumber * pageSize - pageSize)\n      .limit(pageSize)\n      .toArray(),\n\n    userListCount: await database.userList\n      .orderBy(\"createdAt\")\n      .reverse()\n      .filter(\n        user =>\n          user.firstName.toLowerCase().includes(keywords) ||\n          user.lastName.toLowerCase().includes(keywords)\n      )\n      .count()\n  };\n};\n"],"sourceRoot":""}